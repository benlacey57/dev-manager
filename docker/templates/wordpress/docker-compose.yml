services:
  wordpress:
    image: wordpress:{{WP_VERSION}}-php{{PHP_VERSION}}-apache
    container_name: {{PROJECT_NAME}}-wordpress
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: {{DB_PASSWORD}}
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', {{WP_DEBUG}});
        define('WP_DEBUG_LOG', {{WP_DEBUG}});
        define('FORCE_SSL_ADMIN', true);
        if ($$_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') {
          $$_SERVER['HTTPS'] = 'on';
        }
    volumes:
      - ./wordpress:/var/www/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - wordpress-network
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{PROJECT_NAME}}.rule=Host(`{{DOMAIN}}`)"
      - "traefik.http.routers.{{PROJECT_NAME}}.tls=true"
      - "traefik.http.routers.{{PROJECT_NAME}}.tls.certresolver=letsencrypt"
      - "traefik.http.services.{{PROJECT_NAME}}.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    depends_on:
      - db

  db:
    image: mysql:{{MYSQL_VERSION}}
    container_name: {{PROJECT_NAME}}-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: {{DB_PASSWORD}}
      MYSQL_ROOT_PASSWORD: {{DB_ROOT_PASSWORD}}
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - wordpress-network
    command: '--default-authentication-plugin=mysql_native_password'

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: {{PROJECT_NAME}}-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_USER: wordpress
      PMA_PASSWORD: {{DB_PASSWORD}}
      UPLOAD_LIMIT: 100M
    networks:
      - wordpress-network
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{PROJECT_NAME}}-pma.rule=Host(`pma.{{DOMAIN}}`)"
      - "traefik.http.routers.{{PROJECT_NAME}}-pma.tls=true"
      - "traefik.http.routers.{{PROJECT_NAME}}-pma.tls.certresolver=letsencrypt"
      - "traefik.http.services.{{PROJECT_NAME}}-pma.loadbalancer.server.port=80"
    depends_on:
      - db

  redis:
    image: redis:{{REDIS_VERSION}}-alpine
    container_name: {{PROJECT_NAME}}-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass {{REDIS_PASSWORD}}
    volumes:
      - redis_data:/data
    networks:
      - wordpress-network

  backup:
    image: databack/mysql-backup:latest
    container_name: {{PROJECT_NAME}}-backup
    restart: unless-stopped
    environment:
      DB_DUMP_TARGET: s3://your-backup-bucket/{{PROJECT_NAME}}
      DB_USER: wordpress
      DB_PASS: {{DB_PASSWORD}}
      DB_HOST: db
      DB_NAME: wordpress
      DB_DUMP_CRON: "0 2 * * *"
      AWS_ACCESS_KEY_ID: {{AWS_ACCESS_KEY}}
      AWS_SECRET_ACCESS_KEY: {{AWS_SECRET_KEY}}
    volumes:
      - ./backups:/backup
    networks:
      - wordpress-network
    depends_on:
      - db

networks:
  wordpress-network:
    driver: bridge
  proxy:
    external: true

volumes:
  db_data:
  redis_data:
